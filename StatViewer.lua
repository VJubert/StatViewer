StatViewer = {}
TESOStat={
STAT_ARMOR_RATING=STAT_ARMOR_RATING,
STAT_ATTACK_POWER=STAT_ATTACK_POWER,
-- STAT_BLOCK=STAT_BLOCK,
STAT_CRITICAL_RESISTANCE=STAT_CRITICAL_RESISTANCE,
STAT_CRITICAL_STRIKE=STAT_CRITICAL_STRIKE,
-- STAT_DAMAGE_RESIST_COLD=STAT_DAMAGE_RESIST_COLD,
-- STAT_DAMAGE_RESIST_DISEASE=STAT_DAMAGE_RESIST_DISEASE,
-- STAT_DAMAGE_RESIST_DROWN=STAT_DAMAGE_RESIST_DROWN,
-- STAT_DAMAGE_RESIST_EARTH=STAT_DAMAGE_RESIST_EARTH,
-- STAT_DAMAGE_RESIST_FIRE=STAT_DAMAGE_RESIST_FIRE,
-- STAT_DAMAGE_RESIST_GENERIC=STAT_DAMAGE_RESIST_GENERIC,
-- STAT_DAMAGE_RESIST_MAGIC=STAT_DAMAGE_RESIST_MAGIC,
-- STAT_DAMAGE_RESIST_OBLIVION=STAT_DAMAGE_RESIST_OBLIVION,
-- STAT_DAMAGE_RESIST_PHYSICAL=STAT_DAMAGE_RESIST_PHYSICAL,
-- STAT_DAMAGE_RESIST_POISON=STAT_DAMAGE_RESIST_POISON,
-- STAT_DAMAGE_RESIST_SHOCK=STAT_DAMAGE_RESIST_SHOCK,
-- STAT_DAMAGE_RESIST_START=STAT_DAMAGE_RESIST_START,
--STAT_DODGE=STAT_DODGE,
STAT_HEALTH_MAX=STAT_HEALTH_MAX,
STAT_HEALTH_REGEN_COMBAT=STAT_HEALTH_REGEN_COMBAT,
STAT_HEALTH_REGEN_IDLE=STAT_HEALTH_REGEN_IDLE,
STAT_MAGICKA_MAX=STAT_MAGICKA_MAX,
STAT_MAGICKA_REGEN_COMBAT=STAT_MAGICKA_REGEN_COMBAT,
STAT_MAGICKA_REGEN_IDLE=STAT_MAGICKA_REGEN_IDLE,
-- STAT_MISS=STAT_MISS,
-- STAT_MITIGATION=STAT_MITIGATION,
STAT_PHYSICAL_PENETRATION=STAT_PHYSICAL_PENETRATION,
STAT_PHYSICAL_RESIST=STAT_PHYSICAL_RESIST,
STAT_POWER=STAT_POWER,
STAT_SPELL_CRITICAL=STAT_SPELL_CRITICAL,
STAT_SPELL_MITIGATION=STAT_SPELL_MITIGATION,
STAT_SPELL_PENETRATION=STAT_SPELL_PENETRATION,
STAT_SPELL_POWER=STAT_SPELL_POWER,
STAT_SPELL_RESIST=STAT_SPELL_RESIST,
STAT_STAMINA_MAX=STAT_STAMINA_MAX,
STAT_STAMINA_REGEN_COMBAT=STAT_STAMINA_REGEN_COMBAT,
STAT_STAMINA_REGEN_IDLE=STAT_STAMINA_REGEN_IDLE,
STAT_WEAPON_AND_SPELL_DAMAGE=STAT_WEAPON_AND_SPELL_DAMAGE
}

StatViewer.name="StatViewer"


local function StatViewer:Initiliaze()
end

local function StatViewer.OnAddOnLoaded(event, addonName)
	if addonName==StatViewer.name then
		EVENT_MANAGER:RegisterForEvent(StatViewer.name, EVENT_STATS_UPDATED, StatViewer.UpdateStats)
		EVENT_MANAGER:UnregisterForEvent("StatViewer.OnAddOnLoaded",EVENT_ADD_ON_LOADED)
		StatViewer.savedVariables = ZO_SavedVars:NewAccountWide("SVSavedVariables", 1,nil,{})
		-- Register keybinding
		ZO_CreateStringId("SI_BINDING_NAME_TOGGLE_StVa", GetString(StVa_TOGGLE))
		-- enable close on Esc
		SCENE_MANAGER:RegisterTopLevel(AIResearchGrid, false) 
		StatViewer.RestorePosition()
	end
end

local function StatViewer.OnIndicatorMoveStop()
	StatViewer.savedVariables.left = StVaIndicator:GetLeft()
	StatViewer.savedVariables.top = StVaIndicator:GetTop()
end

local function StatViewer:RestorePosition()
	local left = StatViewer.savedVariables.left
	local top = StatViewer.savedVariables.top
	if left ~= nil and top ~= nil then
		StVaIndicator:ClearAnchors()
		StVaIndicator:SetAnchor(TOPLEFT, GuiRoot, TOPLEFT, left, top)
	end
end

local function StatViewer.UpdateStats(event)
	StVaIndicatorLabel:SetText("")
		for t,x in pairs(TESOStat) do
			StVaIndicatorLabel:SetText(StVaIndicatorLabel:GetText()..t.." : "..GetPlayerStat(x,STAT_BONUS_OPTION_APPLY_BONUS).."\n")
	end
end

function StVa_ToggleMainWindow()
	if StVaIndicator:IsHidden() then
		
	end
	SCENE_MANAGER:ToogleTopLevel(StVaIndicator)
end

EVENT_MANAGER:RegisterForEvent(StatViewer.name, EVENT_ADD_ON_LOADED, StatViewer.OnAddOnLoaded)